import type { NextApiRequest, NextApiResponse } from 'next';
import { createClient } from '@supabase/supabase-js';
import bcrypt from 'bcryptjs';

const supabase = createClient(process.env.DB_URL as string, process.env.DB_KEY as string);



export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method not allowed' });
  }

  const { username, password, email }: UserSignup = req.body;

  try {
    const hashedPassword = await bcrypt.hash(password, 12);

    const { error } = await supabase
      .from('user_user')
      .insert([{ username, password: hashedPassword, email }]);

    if (error) {
      return res.status(500).json({ message: 'Error creating user' });
    }

    return res.status(201).json({ message: 'User created successfully' });
  } catch (error) {
    return res.status(500).json({ message: 'Server error' });
  }
}
